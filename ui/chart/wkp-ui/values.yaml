nameOverride: ""
fullnameOverride: ""

enabled: true
image:
  repository: weaveworks/weave-gitops-enterprise-ui-server
  tag: HEAD-c6dbd017
  pullSecrets: []
  pullPolicy: IfNotPresent
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: 'wkp-nginx'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  labels: {}
  path: '/?(.*)'
  hosts:
    - ''
  tls: []
service:
  name: wkp-ui-server
  port: 8000
server:
  htmlRootPath: html/wkp-ui
config: # remember to consult `ui/src/entities/config.ts` before making any changes to this file. (see see https://github.com/weaveworks/wkp-ui/issues/200)
  demoMode: false
  featureGates:
    dashboard: true
    teamWorkspaces: true
    fleetManagement: true
  gitRepo:
    # e.g. git@github.com:weaveworks/wkp-core.git
    url: ''
    provider: 'github' # 'gitlab' or 'github'
    branch: 'master'
    deployKeySecret:
      name: 'wkp-ui-git-deploy-key'
      key: 'gitDeployKey'
    # Provide overrides to drilldownlinks, these are automatically
    # calculated for known providers like GitHub
    drilldownLinks:
      repo: ''
      # Handlebar template that will be provided with {{ branch }}
      # E.g. https://mygit.com/foo/branches/{{ branch }}
      branch: ''
      # Handlebar template that will be provided with {{ branch }}
      # E.g. https://mygit.com/foo/compare/master...{{ branch }}
      compare: ''
      # Handlebar template that will be provided with {{ commit }}
      # E.g. https://mygit.com/foo/commits/{{ commit }}
      commit: ''
  datasources:
    alertmanager: 'alertmanager/api/v1'
    prometheus: 'prometheus/api/v1'
  services:
    gitopsRepoBroker: ''
    github: ''
    multiClusterManagement: ''
  drilldownLinksById:
    # Set the url values to make the drilldown links work
    cluster_resources:
      url: ''
    node_resources:
      queryParam: instance
      url: ''
    alertmanager_dashboard:
      url: ''
  resourcesById:
    cluster_cpu_utilisation:
      label: CPU
      query: sum (rate (container_cpu_usage_seconds_total{id="/"}[5m])) / sum (kube_node_status_capacity{resource="cpu"})
    cluster_cpu_limits:
      label: CPU Limits
      query: sum(kube_pod_container_resource_limits_cpu_cores) / sum (kube_node_status_capacity{resource="cpu"})
    cluster_cpu_requests:
      label: CPU Requests
      query: sum(kube_pod_container_resource_requests_cpu_cores) / sum (kube_node_status_capacity{resource="cpu"})
    cluster_memory_utilisation:
      label: Memory
      query: sum (container_memory_working_set_bytes{id="/"}) / sum (kube_node_status_capacity{resource="memory"})
    cluster_memory_limits:
      label: Memory Limits
      query: sum(kube_pod_container_resource_limits_memory_bytes) / sum (kube_node_status_capacity{resource="memory"})
    cluster_memory_requests:
      label: Memory Requests
      query: sum(kube_pod_container_resource_requests_memory_bytes) / sum (kube_node_status_capacity{resource="memory"})
    node_cpu_utilisation:
      label: CPU
      query: node:node_cpu_utilisation:avg1m
    node_memory_utilisation:
      label: Memory
      query: node:node_memory_utilisation:ratio
    node_pods_count:
      label: Pods
      query: sum (kube_pod_info) by (__name__,node)
    deployment_replicas_unavailable:
      label: Deployments unavailable
      query: kube_deployment_status_replicas_unavailable
  clusterInfo:
    name: My Cluster
    provider: ''
    regions: ''
    track: ''
    managementClusterLink: ''
  homepage:
    alertNotifications:
      enabled: true
      rotate: true
      rotationInterval: 5s
      pollInterval: 15s
      displayLimit: 1
      drilldownLinkId: alertmanager_dashboard
    clusterResources:
      charts:
      - name: CPU
        drilldownLinkId: cluster_resources
        limits:
          resourceId: cluster_cpu_limits
        requests:
          resourceId: cluster_cpu_requests
        utilization:
          resourceId: cluster_cpu_utilisation
      - name: Memory
        drilldownLinkId: cluster_resources
        limits:
          resourceId: cluster_memory_limits
        requests:
          resourceId: cluster_memory_requests
        utilization:
          resourceId: cluster_memory_utilisation
      drilldownLinkId: cluster_resources
      enabled: true
      pollInterval: 15s
    nodesOverview:
      enabled: true
      title: All nodes
      pollInterval: 15s
      # Must have at most 2 sparklines for the good looks
      sparklines:
      - resourceId: node_cpu_utilisation
      - resourceId: node_memory_utilisation
      singlestat:
        resourceId: node_pods_count
      drilldownLinkId: node_resources
    clusterComponents:
      enabled: true
      pollInterval: 5s
      configMap:
        name: ''
        key: components.json
    gitBranches:
      enabled: true
      pollInterval: 10s
    workspaces:
      enabled: true
      pollInterval: 10s
