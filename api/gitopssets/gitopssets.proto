/**
 * This file holds the protobuf definitions for the Weave GitOps GitOpsSets API.
 * Messages and enums are defined in types.proto.
 */
syntax = "proto3";

package gitopssets.v1;

import "google/api/annotations.proto";
import "google/api/visibility.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "api/gitopssets/types.proto";

option go_package = "github.com/weaveworks/weave-gitops-enterprise/gitopssets/api";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Weave GitOps GitOpsSets API",
      version: "0.1";
      description: "The API handles operations for Weave GitOps GitopsSets";
    };
    consumes: "application/json";
    produces: "application/json";
};

/**
 * Weave GitOps GitOpsSets service definition
 */
service GitOpsSets {
    // List GitOpsSets across all clusters
    rpc ListGitOpsSets(ListGitOpsSetsRequest) returns (ListGitOpsSetsResponse) {
        option (google.api.http) = {
            get : "/v1/gitopssets"
        };
    }

    // Get a GitOpsSet
    rpc GetGitOpsSet(GetGitOpsSetRequest) returns (GetGitOpsSetResponse) {
        option (google.api.http) = {
            get : "/v1/namespaces/{namespace}/gitopssets/{name}"
        };
    }
    

    // Toggle suspend on a GitOpsSet
    rpc ToggleSuspendGitOpsSet(ToggleSuspendGitOpsSetRequest)
        returns (ToggleSuspendGitOpsSetResponse) {
        option (google.api.http) = {
            patch : "/v1/namespaces/{namespace}/gitopssets/{name}/suspend"
            body: "*"
        }; 
    }

    /**
    * GetInventory returns a list of InventoryEntry
    * objects and children,
    * given the gitopsset name and namespace and cluster.
    */
    rpc GetInventory(GetInventoryRequest) returns (GetInventoryResponse) {
        option (google.api.http) = {
            get : "/v1/namespaces/{namespace}/gitopssets/{name}/inventory",
        };
    }

    /**
    * GetReconciledObjects returns a list of objects
    * that were created as a result a Flux automation.
    * This list is derived by looking at the Kustomization
    * or HelmRelease specified in the request body.
    */
    rpc GetReconciledObjects(GetReconciledObjectsRequest)
        returns (GetReconciledObjectsResponse) {
        option (google.api.http) = {
            post: "/v1/namespaces/{namespace}/gitopssets/{name}/reconciled-objects"
            body: "*"
        };
    };

    // Trigger reconciliation of a GitOpsSet
    rpc SyncGitOpsSet(SyncGitOpsSetRequest) returns (SyncGitOpsSetResponse) {
        option (google.api.http) = {
            patch : "/v1/namespaces/{namespace}/gitopssets/{name}/sync"
            body: "*"
        };
    }    
}
message GetInventoryRequest {
    string name         = 1;
    string namespace    = 2;
    string cluster_name  = 3;
    bool   with_children = 4;
}

message GetInventoryResponse {
    repeated InventoryEntry entries = 1;
}

message HealthStatus {
    string status = 1;
    string message = 2;
}

message InventoryEntry {
    string payload = 1;
    string tenant = 2;
    string cluster_name = 3;
    HealthStatus health = 4;
    repeated InventoryEntry children = 5;
}

message ListGitOpsSetsRequest {
    string namespace   = 1;
}

message ListGitOpsSetsResponse {
    repeated GitOpsSet gitopssets = 1;
    repeated GitOpsSetListError errors = 2;
}

message ToggleSuspendGitOpsSetRequest {
    string cluster_name      = 1;
    string name              = 2;
    string namespace         = 3;
    bool   suspend           = 4;
}

message ToggleSuspendGitOpsSetResponse {
}

message GetReconciledObjectsRequest {
    string         name                    = 1;
    string         namespace               = 2;
    repeated       GroupVersionKind kinds  = 3;
    string         cluster_name            = 4;
}

message GetReconciledObjectsResponse {
    repeated Object objects = 1;
}

message SyncGitOpsSetRequest {
    string cluster_name = 1;
    string name         = 2;
    string namespace    = 3;
}

message SyncGitOpsSetResponse {
    bool success = 1;
}

message GetGitOpsSetRequest {
    string name        = 1;
    string namespace   = 2;
    string cluster_name = 3;
}

message GetGitOpsSetResponse {
    GitOpsSet gitops_set = 1;
}
