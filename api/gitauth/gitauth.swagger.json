{
  "swagger": "2.0",
  "info": {
    "title": "Weave Gitops Enterprise GitAuth API",
    "description": "Weave Gitops Enterprise GitAuth API handles authentication via Github and Gitlab",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "GitAuth"
    }
  ],
  "consumes": [
    "gitauth/json"
  ],
  "produces": [
    "gitauth/json"
  ],
  "paths": {
    "/v1/authenticate/{providerName}": {
      "post": {
        "summary": "Authenticate generates jwt token using git provider name\nand git provider token arguments",
        "operationId": "GitAuth_Authenticate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "providerName",
            "description": "The name of the git provider",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "title": "The token of the git provider"
                }
              }
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/azuredevops": {
      "get": {
        "summary": "GetAzureDevOpsAuthURL returns the Azure DevOps authorization URL\nused to initiate the OAuth flow.",
        "operationId": "GitAuth_GetAzureDevOpsAuthURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAzureDevOpsAuthURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirectUri",
            "description": "The URI that Azure DevOps will use to send users back to GitOps.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/azuredevops/authorize": {
      "post": {
        "summary": "AuthorizeAzureDevOps returns a token after a user authorizes\nAzure DevOps to grant access to their account\non behalf of Weave GitOps Enterprise.",
        "operationId": "GitAuth_AuthorizeAzureDevOps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeAzureDevOpsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthorizeAzureDevOpsRequest"
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/bitbucketserver": {
      "get": {
        "operationId": "GitAuth_GetBitbucketServerAuthURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetBitbucketServerAuthURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirectUri",
            "description": "The URI that Bitbucket Server will use to send users back to GitOps.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/bitbucketserver/authorize": {
      "post": {
        "operationId": "GitAuth_AuthorizeBitbucketServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeBitbucketServerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthorizeBitbucketServerRequest"
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/github": {
      "get": {
        "summary": "GetGithubDeviceCode retrieves a temporary device code\nfor Github authentication.\nThis code is used to start the Github device-flow.",
        "operationId": "GitAuth_GetGithubDeviceCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGithubDeviceCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/github/status": {
      "post": {
        "summary": "GetGithubAuthStatus gets the status of the Github device flow\nauthentication requests. Once the user has completed\nthe Github device flow, an access token will be returned.\nThis token will expire in 15 minutes,\nafter which the user will need to complete the flow again\nto do Git Provider operations.",
        "operationId": "GitAuth_GetGithubAuthStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGithubAuthStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetGithubAuthStatusRequest"
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/gitlab": {
      "get": {
        "summary": "GetGitlabAuthURL returns the URL to initiate a GitLab OAuth PKCE flow.\nThe user must browse to the returned URL to authorize the OAuth callback\nto the GitOps UI.\nSee the GitLab OAuth docs for more more information:\nhttps://docs.gitlab.com/ee/api/oauth2.html#supported-oauth-20-flows",
        "operationId": "GitAuth_GetGitlabAuthURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetGitlabAuthURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirectUri",
            "description": "The URI that GitLab will use to send users back to GitOps.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/auth_providers/gitlab/authorize": {
      "post": {
        "summary": "AuthorizeGitlab exchanges a GitLab code obtained via OAuth callback.\nThe returned token is useable for authentication\nwith the GitOps server only.\nSee the GitLab OAuth docs for more more information:\nhttps://docs.gitlab.com/ee/api/oauth2.html#supported-oauth-20-flows",
        "operationId": "GitAuth_AuthorizeGitlab",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeGitlabResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthorizeGitlabRequest"
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/parse_repo_url": {
      "get": {
        "summary": "ParseRepoURL returns structured data about a git repository URL",
        "operationId": "GitAuth_ParseRepoURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ParseRepoURLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "url",
            "description": "The URL to be parsed",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    },
    "/v1/gitauth/validate_token": {
      "post": {
        "summary": "ValidateProviderToken check to see if the git provider token\nis still valid",
        "operationId": "GitAuth_ValidateProviderToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateProviderTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateProviderTokenRequest"
            }
          }
        ],
        "tags": [
          "GitAuth"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthenticateResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "The jwt token that was generated using git provider name\nand git provider token"
        }
      }
    },
    "v1AuthorizeAzureDevOpsRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The challenge code obtained from the OAuth callback"
        },
        "state": {
          "type": "string",
          "title": "The state parameter provided in the authorization URL"
        },
        "redirectUri": {
          "type": "string",
          "title": "The redirect URI that originated the OAuth flow"
        }
      }
    },
    "v1AuthorizeAzureDevOpsResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "A token that can be used to authenticate the GitOps API server."
        }
      }
    },
    "v1AuthorizeBitbucketServerRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The challenge code obtained from the OAuth callback"
        },
        "state": {
          "type": "string",
          "title": "The state parameter provided in the authorization URL"
        },
        "redirectUri": {
          "type": "string",
          "title": "The redirect URI that originated the OAuth flow"
        }
      }
    },
    "v1AuthorizeBitbucketServerResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "A token that can be used to authenticate the GitOps API server."
        }
      }
    },
    "v1AuthorizeGitlabRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The challenge code obtained from the OAuth callback"
        },
        "redirectUri": {
          "type": "string",
          "title": "The redirect URI that originated the OAuth flow"
        }
      }
    },
    "v1AuthorizeGitlabResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "A token that can be used to authenticate the GitOps API server."
        }
      }
    },
    "v1GetAzureDevOpsAuthURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL that users must visit to initiate the Azure DevOps OAuth flow."
        }
      }
    },
    "v1GetBitbucketServerAuthURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL that users must visit\nto authorize BitBucket Server authentication."
        }
      }
    },
    "v1GetGithubAuthStatusRequest": {
      "type": "object",
      "properties": {
        "deviceCode": {
          "type": "string",
          "title": "The deviceCode returned from a GetGithubDeviceCodeResponse"
        }
      }
    },
    "v1GetGithubAuthStatusResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "An access token that can be used to interact with the Weave GitOps API."
        },
        "error": {
          "type": "string",
          "description": "An error message."
        }
      }
    },
    "v1GetGithubDeviceCodeResponse": {
      "type": "object",
      "properties": {
        "userCode": {
          "type": "string",
          "title": "The Github Device Flow code that will be shown to the user"
        },
        "deviceCode": {
          "type": "string",
          "title": "A code that uniquely identifies a device"
        },
        "validationURI": {
          "type": "string",
          "title": "The URI that the user will visit to complete the flow"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "title": "How often the client should retry the request"
        }
      }
    },
    "v1GetGitlabAuthURLResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL that users must visit to authorize GitLab authentication."
        }
      }
    },
    "v1GitProvider": {
      "type": "string",
      "enum": [
        "Unknown",
        "GitHub",
        "GitLab",
        "BitBucketServer",
        "AzureDevOps"
      ],
      "default": "Unknown",
      "description": "GitProvider enum defines the Git provider used in the GitAuth API."
    },
    "v1ParseRepoURLResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the git repository"
        },
        "provider": {
          "$ref": "#/definitions/v1GitProvider",
          "title": "The GitProvider for the repository"
        },
        "owner": {
          "type": "string",
          "title": "The person or organization to which this repo belongs"
        }
      }
    },
    "v1ValidateProviderTokenRequest": {
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "#/definitions/v1GitProvider"
        }
      }
    },
    "v1ValidateProviderTokenResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    }
  }
}
