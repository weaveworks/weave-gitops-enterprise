/**
 * This file holds the protobuf definitions
 * for the Weave GitOps Query Service API.
 */
syntax = "proto3";

package query.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/weaveworks/weave-gitops-enterprise/query/api";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Weave GitOps Query Service API",
      version: "0.1";
      description:
          "The API handles handles cross-cluster queries"
          " for Weave GitOps Enterprise";
    };
    consumes: "application/json";
    produces: "application/json";
};

/**
 * Weave GitOps Query service definition
 */
service Query {
    /*
     * Query for resources across clusters
     */
    rpc DoQuery(DoQueryRequest) returns (DoQueryResponse) {
        option (google.api.http) = {
            post: "/v1/query"
            body: "*"
        };
    }

    /*
     * List facets available for querying
     */
    rpc ListFacets(ListFacetsRequest) returns (ListFacetsResponse) {
        option (google.api.http) = {
            get: "/v1/facets"
        };
    }

    /*
     * Get debug access rules
     */
    rpc DebugGetAccessRules(DebugGetAccessRulesRequest)
        returns (DebugGetAccessRulesResponse) {
        option (google.api.http) = {
            get: "/v1/debug/access-rules"
        };
    }

    // FIXME
    rpc ListEnabledComponents(ListEnabledComponentsRequest)
        returns (ListEnabledComponentsResponse) {
        option (google.api.http) = {
            get: "/v1/enabled-components"
        };
    }
}

message DoQueryRequest {
    string   terms          = 1;
    repeated string filters = 2;
    int32    offset         = 3;
    int32    limit          = 4;
    string   order_by        = 5;
    bool     ascending      = 6;
}

message DoQueryResponse {
  repeated Object objects = 1;
}

message Object {
    string cluster      = 1;
    string namespace    = 2;
    string kind         = 3;
    string name         = 4;
    string status       = 5;
    string api_group     = 6;
    string api_version   = 7;
    string message      = 8;
    string category     = 9;
    string unstructured = 10;
    string id           = 11;
    string tenant       = 12;
    map<string, string> labels       = 13;
}

message DebugGetAccessRulesRequest {

}

message DebugGetAccessRulesResponse {
    repeated AccessRule rules = 1;
}

message AccessRule {
    string   cluster                = 1;
    string   principal              = 2;
    string   namespace              = 3;
    repeated string accessible_kinds = 4;
    repeated Subject subjects       = 5;
    string   provided_by_role         = 6;
    string   provided_by_binding      = 7;
}

message Subject {
    string kind = 1;
    string name = 2;
}

message ListFacetsRequest {

}

message ListFacetsResponse {
    repeated Facet facets = 1;
}

message Facet {
    string field = 1;
    repeated string values = 2;
}

// EnabledComponent represents a component of the UI that can be enabled or disabled
enum EnabledComponent {
    unknown      = 0;
    applications = 1;
    sources      = 2;
    gitopssets   = 3;
    templates    = 4;
}

message ListEnabledComponentsRequest {

}

message ListEnabledComponentsResponse {
    repeated EnabledComponent components = 1;
}

