/**
 * This file holds the protobuf definitions
 * for the Weave GitOps Query Service API.
 */
syntax = "proto3";

package query.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/weaveworks/weave-gitops-enterprise/query/api";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Weave GitOps Query Service API",
      version: "0.1";
      description:
          "The API handles handles cross-cluster queries"
          " for Weave GitOps Enterprise";
    };
    consumes: "application/json";
    produces: "application/json";
};

/**
 * Weave GitOps Query service definition
 */
service Query {
    rpc DoQuery(QueryRequest) returns (QueryResponse) {
        option (google.api.http) = {
            post: "/v1/query"
            body: "*"
        };
    }

    rpc ListFacets(ListFacetsRequest) returns (ListFacetsResponse) {
        option (google.api.http) = {
            get: "/v1/facets"
        };
    }

    rpc DebugGetAccessRules(DebugGetAccessRulesRequest)
        returns (DebugGetAccessRulesResponse) {
        option (google.api.http) = {
            get: "/v1/debug/access-rules"
        };
    }
}

message QueryRequest {
    string   terms          = 1;
    repeated string filters = 2;
    int32    offset         = 3;
    int32    limit          = 4;
    string   orderBy        = 5;
    bool     ascending      = 6;
}

message QueryResponse {
  repeated Object objects = 1;
}

message Object {
    string cluster      = 1;
    string namespace    = 2;
    string kind         = 3;
    string name         = 4;
    string status       = 5;
    string apiGroup     = 6;
    string apiVersion   = 7;
    string message      = 8;
    string category     = 9;
    string unstructured = 10;
}

message DebugGetAccessRulesRequest {

}

message DebugGetAccessRulesResponse {
    repeated AccessRule rules = 1;
}

message AccessRule {
    string   cluster                = 1;
    string   principal              = 2;
    string   namespace              = 3;
    repeated string accessibleKinds = 4;
    repeated Subject subjects       = 5;
    string   providedByRole         = 6;
    string   providedByBinding      = 7;
}

message Subject {
    string kind = 1;
    string name = 2;
}

message ListFacetsRequest {

}

message ListFacetsResponse {
    repeated Facet facets = 1;
}

message Facet {
    string field = 1;
    repeated string values = 2;
}
