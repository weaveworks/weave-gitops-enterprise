apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: gitopssets.templates.weave.works
spec:
  group: templates.weave.works
  names:
    kind: GitOpsSet
    listKind: GitOpsSetList
    plural: gitopssets
    shortNames:
    - gs
    singular: gitopsset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsSet is the Schema for the gitopssets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsSetSpec defines the desired state of GitOpsSet
            properties:
              generators:
                description: Generators generate the data to be inserted into the
                  provided templates.
                items:
                  description: GitOpsSetGenerator is the top-level set of generators
                    for this GitOpsSet.
                  properties:
                    gitRepository:
                      description: GitRepositoryGenerator generates from files in
                        a Flux GitRepository resource.
                      properties:
                        files:
                          description: Files is a set of rules for identifying files
                            to be parsed.
                          items:
                            description: GitRepositoryGeneratorFileItemm defines a
                              path to a file to be parsed when generating.
                            properties:
                              path:
                                description: Path is the name of a file to read and
                                  generate from can be JSON or YAML.
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                        repositoryRef:
                          description: RepositoryRef is the name of a GitRepository
                            resource to be generated from.
                          type: string
                      type: object
                    list:
                      description: ListGenerator generates from a hard-coded list.
                      properties:
                        elements:
                          items:
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      type: object
                    matrix:
                      description: MatrixGenerator defines a matrix that combines
                        generators. The matrix is a cartesian product of the generators.
                      properties:
                        generators:
                          description: Generators is a list of generators to be combined.
                          items:
                            description: GitOpsSetNestedGenerator describes the generators
                              usable by the MatrixGenerator. This is a subset of the
                              generators allowed by the GitOpsSetGenerator because
                              the CRD format doesn't support recursive declarations.
                            properties:
                              gitRepository:
                                description: GitRepositoryGenerator generates from
                                  files in a Flux GitRepository resource.
                                properties:
                                  files:
                                    description: Files is a set of rules for identifying
                                      files to be parsed.
                                    items:
                                      description: GitRepositoryGeneratorFileItemm
                                        defines a path to a file to be parsed when
                                        generating.
                                      properties:
                                        path:
                                          description: Path is the name of a file
                                            to read and generate from can be JSON
                                            or YAML.
                                          type: string
                                      required:
                                      - path
                                      type: object
                                    type: array
                                  repositoryRef:
                                    description: RepositoryRef is the name of a GitRepository
                                      resource to be generated from.
                                    type: string
                                type: object
                              list:
                                description: ListGenerator generates from a hard-coded
                                  list.
                                properties:
                                  elements:
                                    items:
                                      x-kubernetes-preserve-unknown-fields: true
                                    type: array
                                type: object
                              pullRequests:
                                description: PullRequestGenerator defines a generator
                                  that queries a Git hosting service for relevant
                                  PRs.
                                properties:
                                  driver:
                                    description: Determines which git-api protocol
                                      to use.
                                    enum:
                                    - github
                                    - gitlab
                                    - bitbucketserver
                                    type: string
                                  forks:
                                    description: Fork is used to filter out forks
                                      from the target PRs if false, or to include
                                      forks if  true
                                    type: boolean
                                  interval:
                                    description: The interval at which to check for
                                      repository updates.
                                    type: string
                                  labels:
                                    description: Labels is used to filter the PRs
                                      that you want to target. This may be applied
                                      on the server.
                                    items:
                                      type: string
                                    type: array
                                  repo:
                                    description: This should be the Repo you want
                                      to query. e.g. my-org/my-repo
                                    type: string
                                  secretRef:
                                    description: Reference to Secret in same namespace
                                      with a field "password" which is an auth token
                                      that can query the Git Provider API.
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverURL:
                                    description: This is the API endpoint to use.
                                    pattern: ^https://
                                    type: string
                                required:
                                - driver
                                - interval
                                - repo
                                type: object
                            type: object
                          type: array
                      type: object
                    pullRequests:
                      description: PullRequestGenerator defines a generator that queries
                        a Git hosting service for relevant PRs.
                      properties:
                        driver:
                          description: Determines which git-api protocol to use.
                          enum:
                          - github
                          - gitlab
                          - bitbucketserver
                          type: string
                        forks:
                          description: Fork is used to filter out forks from the target
                            PRs if false, or to include forks if  true
                          type: boolean
                        interval:
                          description: The interval at which to check for repository
                            updates.
                          type: string
                        labels:
                          description: Labels is used to filter the PRs that you want
                            to target. This may be applied on the server.
                          items:
                            type: string
                          type: array
                        repo:
                          description: This should be the Repo you want to query.
                            e.g. my-org/my-repo
                          type: string
                        secretRef:
                          description: Reference to Secret in same namespace with
                            a field "password" which is an auth token that can query
                            the Git Provider API.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        serverURL:
                          description: This is the API endpoint to use.
                          pattern: ^https://
                          type: string
                      required:
                      - driver
                      - interval
                      - repo
                      type: object
                  type: object
                type: array
              serviceAccountName:
                description: The name of the Kubernetes service account to impersonate
                  when reconciling this Kustomization.
                type: string
              suspend:
                description: Suspend tells the controller to suspend the reconciliation
                  of this GitOpsSet.
                type: boolean
              templates:
                description: Templates are a set of YAML templates that are rendered
                  into resources from the data supplied by the generators.
                items:
                  description: GitOpsSetTemplate describes a resource to create
                  properties:
                    content:
                      description: Content is the YAML to be templated and generated.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    repeat:
                      description: Repeat is a JSONPath string defining that the template
                        content should be repeated for each of the matching elements
                        in the JSONPath expression. https://kubernetes.io/docs/reference/kubectl/jsonpath/
                      type: string
                  required:
                  - content
                  type: object
                type: array
            type: object
          status:
            description: GitOpsSetStatus defines the observed state of GitOpsSet
            properties:
              conditions:
                description: Conditions holds the conditions for the GitOpsSet
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              inventory:
                description: Inventory contains the list of Kubernetes resource object
                  references that have been successfully applied
                properties:
                  entries:
                    description: Entries of Kubernetes resource object references.
                    items:
                      description: ResourceRef contains the information necessary
                        to locate a resource within a cluster.
                      properties:
                        id:
                          description: ID is the string representation of the Kubernetes
                            resource object's metadata, in the format '<namespace>_<name>_<group>_<kind>'.
                          type: string
                        v:
                          description: Version is the API version of the Kubernetes
                            resource object's kind.
                          type: string
                      required:
                      - id
                      - v
                      type: object
                    type: array
                type: object
              observedGeneration:
                description: ObservedGeneration is the last observed generation of
                  the HelmRepository object.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
