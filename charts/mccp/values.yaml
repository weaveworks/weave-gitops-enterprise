# Default values for mccp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

images:
  eventWriter: docker.io/weaveworks/weave-gitops-enterprise-event-writer:v2.5.0
  gitopsRepoBroker: docker.io/weaveworks/weave-gitops-enterprise-gitops-repo-broker:v2.5.0
  clustersService: docker.io/weaveworks/weave-gitops-enterprise-clusters-service:v0.0.2
  clusterBootstrapController: docker.io/weaveworks/cluster-bootstrap-controller:v0.0.3

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

dbConfig:
  databaseType: sqlite
  databaseURI: /var/database/mccp.db
  sqliteConfig:
    persistentVolumeClaim:
      enabled: true
      size: 10G
      existingClaimName: ""
  postgresConfig:
    databaseName: postgres

fluxCli:
  image: ghcr.io/fluxcd/flux-cli:v0.19.1
  binPath: /usr/local/bin/flux

config:
  cluster:
    name: default
  git:
    type: github
    hostname: github.com
  capi:
    templates:
      namespace: default
      injectPruneAnnotation: enabled
    clusters:
      namespace: default
    repositoryURL: ''
    repositoryApiURL: ''
    repositoryPath: ''
    baseBranch: main
  checkpoint:
    enabled: true

gitopsRepoBroker:
  gitRepo:
    url: ''
    branch: ''
  gitDeployKeySecretName: ''
  sshConfigMapName: ''

agentTemplate:
  natsScheme: nats
  natsURL: weave-gitops-enterprise-nats-client.wego-system:4222

nats:
  auth:
    enabled: true
    user: ''
    token: $NATS_AUTH_TOKEN
  client:
    service:
      type: NodePort
  extraEnvVarsSecret: nats-env-vars-secret

nginx-ingress-controller:
  ingressClass: mccp-nginx
  config:
    ssl-redirect: 'false'

wkp-ui:
  server:
    htmlRootPath: html/mccp
  image:
    tag: v2.5.0
    pullSecrets: []
  ingress:
    annotations:
      kubernetes.io/ingress.class: mccp-nginx
  config:
    featureGates:
      # only enable the mccp
      fleetManagement: true
      dashboard: false
      teamWorkspaces: false
    clusterInfo:
      name: 'MCCP'
