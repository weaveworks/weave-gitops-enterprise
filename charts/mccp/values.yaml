# Default values for mccp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

images:
  eventWriter: docker.io/weaveworks/weave-gitops-enterprise-event-writer:v2.5.0
  clustersService: docker.io/weaveworks/weave-gitops-enterprise-clusters-service:v0.0.2
  uiServer: docker.io/weaveworks/weave-gitops-enterprise-ui-server:v0.0.2
  clusterBootstrapController: docker.io/weaveworks/cluster-bootstrap-controller:v0.0.3

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

dbConfig:
  databaseType: sqlite
  databaseURI: /var/database/mccp.db
  sqliteConfig:
    persistentVolumeClaim:
      enabled: true
      size: 10G
      existingClaimName: ""
  postgresConfig:
    databaseName: postgres

config:
  cluster:
    name: default
  git:
    type: github
    hostname: github.com
  capi:
    templates:
      namespace: default
      injectPruneAnnotation: enabled
    clusters:
      namespace: default
    repositoryURL: ""
    repositoryApiURL: ""
    repositoryPath: ""
    baseBranch: main
  checkpoint:
    enabled: true
  oidc:
    enabled: false
    issuerURL: ""
    redirectURL: ""
    cookieDuration: 1h
    # Name of secret in wego-system namespace that contains a clientId and clientSecret
    clientCredentialsSecret: ""

agentTemplate:
  natsScheme: nats
  natsURL: weave-gitops-enterprise-nats-client.wego-system:4222

nats:
  auth:
    enabled: true
    user: ""
    token: $NATS_AUTH_TOKEN
  client:
    service:
      type: NodePort
  extraEnvVarsSecret: nats-env-vars-secret

tls:
  enabled: true
  # if no tls secret is specified then we generate it in-mem in the server
  secretName: ""

rbac:
  userRoles:
    create: true

service:
  type: ClusterIP
  ports:
    https: 8000
  targetPorts:
    https: 8000
  nodePorts:
    http: ""
    https: ""
    tcp: {}
    udp: {}
  clusterIP: ""
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  externalTrafficPolicy: ""
  healthCheckNodePort: 0
