apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mccp.fullname" . }}-event-writer
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mccp.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-writer
  template:
    metadata:
      labels:
        app: event-writer
        {{- include "mccp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: event-writer
          image: {{ .Values.images.eventWriter }}
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: nats-env-vars-secret
          env:
            - name: RUNTIME_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NATS_URL
              # NATS_AUTH_TOKEN comes from nats-env-vars-secret
              value: "nats://$(NATS_AUTH_TOKEN)@{{ printf "%s-nats-client" .Release.Name }}.$(RUNTIME_NAMESPACE):{{ (int .Values.nats.client.service.port) }}"
            - name: DB_URI
              value: {{ .Values.dbConfig.databaseURI }}
            - name: DB_TYPE
              value: {{ .Values.dbConfig.databaseType }}
            - name: DB_NAME
              value: {{ .Values.dbConfig.postgresConfig.databaseName }}
            {{- if eq .Values.dbConfig.databaseType "postgres" }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mccp-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mccp-db-credentials
                  key: password
            {{- end }}
          {{- if eq .Values.dbConfig.databaseType "sqlite" }}
          volumeMounts:
            - name: database-volume
              mountPath: /var/database
          {{- end }}
      {{- if eq .Values.dbConfig.databaseType "sqlite" }}
      volumes:
      - name: database-volume
        {{- if .Values.dbConfig.sqliteConfig.persistentVolumeClaim.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.dbConfig.sqliteConfig.persistentVolumeClaim.existingClaimName | default "wge-volume" }}
        {{- end }}
      {{- end }}
