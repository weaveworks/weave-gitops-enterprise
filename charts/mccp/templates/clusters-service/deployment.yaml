apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mccp.fullname" . }}-cluster-service
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "mccp.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clusters-service
  template:
    metadata:
      labels:
        app: clusters-service
        {{- include "mccp.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mccp.serviceAccountName" . }}
      initContainers:
      - name: mount-flux-cli-bin
        image: {{ .Values.fluxCli.image }}
        command: ["cp", {{ .Values.fluxCli.binPath | quote }}, "/flux-cli/flux"]
        volumeMounts:
        - mountPath: /flux-cli
          name: flux-cli-volume
      containers:
        - name: clusters-service
          image: {{ .Values.images.clustersService }}
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: {{ include "mccp.fullname" . }}-cluster-service
          - secretRef:
              name: git-provider-credentials
              optional: true
          env:
            - name: WEAVE_GITOPS_FLUX_BIN_PATH
              value: /flux-cli/flux
            - name: RUNTIME_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DB_URI
              value: {{ .Values.dbConfig.databaseURI }}
            - name: DB_TYPE
              value: {{ .Values.dbConfig.databaseType }}
            - name: DB_NAME
              value: {{ .Values.dbConfig.postgresConfig.databaseName }}
            {{- if eq .Values.dbConfig.databaseType "postgres" }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mccp-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mccp-db-credentials
                  key: password
            {{- end }}
          volumeMounts:
            - name: flux-cli-volume
              mountPath: /flux-cli
            {{- if eq .Values.dbConfig.databaseType "sqlite" }}
            - name: database-volume
              mountPath: /var/database
            {{- end }}
            {{- if .Values.config.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.config.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
      - name: flux-cli-volume
        emptyDir: {}
      {{- if eq .Values.dbConfig.databaseType "sqlite" }}
      - name: database-volume
        {{- if .Values.dbConfig.sqliteConfig.persistentVolumeClaim.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.dbConfig.sqliteConfig.persistentVolumeClaim.existingClaimName | default "wge-volume" }}
        {{- end }}
      {{- end }}
      {{- if .Values.config.extraVolumes }}
      {{- include "common.tplvalues.render" (dict "value" .Values.config.extraVolumes  "context" $) | nindent 6 }}
      {{- end }}
