apiVersion: v1
kind: ServiceAccount
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: "policy-agent"
    app.kubernetes.io/version: "1"
    app.kubernetes.io/component: "service-account"
    app.kubernetes.io/tier: "backend"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: "policy-agent"
    app.kubernetes.io/version: "1"
    app.kubernetes.io/component: "cluster-role"
    app.kubernetes.io/tier: "backend"
rules:
- apiGroups:
  - 'pac.weave.works'
  resources:
  - 'policies'
  - 'policysets'
  - 'policyconfigs'
  - 'policies/status'
  - 'policyconfigs/status'
  verbs:
  - '*'
- apiGroups:
  - ""
  - "events.k8s.io"
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - ""
  - apps
  - batch
  - rbac.authorization.k8s.io
  - autoscaling
  resources: 
  - pods
  - deployments
  - replicationcontrollers
  - statefulsets
  - daemonsets
  - replicasets
  - jobs
  - cronjobs
  - clusterrolebindings
  - serviceaccounts
  - nodes
  - horizontalpodautoscalers
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: "policy-agent"
    app.kubernetes.io/version: "1"
    app.kubernetes.io/component: "cluster-role-binding"
    app.kubernetes.io/tier: "backend"
subjects:
- kind: ServiceAccount
  name: policy-agent
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: policy-agent
  apiGroup: rbac.authorization.k8s.io
---
{{if eq .Values.persistence.enabled true }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: policy-agent
spec:
  storageClassName: {{ .Values.persistence.storageClassName }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.persistence.claimStorage }}
---
{{end}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: policy-agent-config
data:
  config.yaml: |-
    {{- toYaml .Values.config | nindent 6 }}
---
{{if eq .Values.useCertManager true }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: agent-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: agent-certificate
spec:
  commonName: policy-agent.{{ .Release.Namespace }}.svc
  dnsNames:
  - policy-agent.{{ .Release.Namespace }}.svc.cluster.local
  - policy-agent.{{ .Release.Namespace }}.svc
  issuerRef:
    kind: Issuer
    name: agent-issuer
  secretName: policy-agent-cert
---
{{ else }}
apiVersion: v1
kind: Secret
metadata:
  name: policy-agent-cert
type: kubernetes.io/tls
data:
  tls.crt: |
      {{ .Values.certificate | b64enc }}
  tls.key: |
      {{ .Values.key | b64enc }}
---
{{- end }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: "policy-agent"
    app.kubernetes.io/instance: "policy-agent"
    app.kubernetes.io/part-of: "policy-agent"
    app.kubernetes.io/managed-by: "weaveworks"
    app.kubernetes.io/version: "1"
    app.kubernetes.io/component: "policy-agent"
    app.kubernetes.io/tier: "backend"
spec:
  replicas: 1
  selector:
    matchLabels:
      name:  policy-agent
  template:
    metadata:
      labels:
        azure-extensions-usage-release-identifier: {{ .Release.Name }}
        name: policy-agent
    spec:
      serviceAccountName: policy-agent
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
      containers:
        - image: {{ .Values.global.azure.images.policyAgent.registry }}/{{ .Values.global.azure.images.policyAgent.image }}@{{ .Values.global.azure.images.policyAgent.digest }}
          imagePullPolicy: IfNotPresent
          name: policy-agent
          args: [
            "--config-file",
            "/config/config.yaml"
          ]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            runAsGroup: 1000
            runAsUser: 1000
          resources:
            limits:
              memory: 750Mi
              cpu: 2
            requests:
              memory: 200Mi
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9000
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 9000
            initialDelaySeconds: 5
          ports:
          - containerPort: 8443
            name: webhook
            protocol: TCP
          envFrom:
          - configMapRef:
              name: policy-agent-config
          volumeMounts:
          - name: cert
            mountPath: /certs
            readOnly: true
          - name: agent-config-volume
            mountPath: /config
          {{- if eq .Values.persistence.enabled true }}
          - name: validation-results
            mountPath: /logs
          {{- end }}
      volumes:
      - name: cert
        secret:
          secretName: policy-agent-cert
      - name: agent-config-volume
        configMap:
          name: policy-agent-config
      {{- if eq .Values.persistence.enabled true }}
      - name: validation-results
        persistentVolumeClaim:
          claimName: policy-agent
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: policy-agent
spec:
  ports:
  - name: https-admission-webhook
    port: 443
    targetPort: webhook
  selector:
    name:  policy-agent
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: policy-agent
  {{- if eq .Values.useCertManager true }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/agent-certificate
  {{- end }}
webhooks:
{{- if eq .Values.config.admission.enabled true }}
  - name: admission.agent.weaveworks
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: policy-agent
        path: /admission
      caBundle: {{ .Values.caCertificate | b64enc }}
    rules:
      - operations: [ "CREATE", "UPDATE" ]
        apiVersions: ["*"]
        apiGroups:
        - ""
        - extensions
        - apps
        - batch
        - metrics.k8s.io
        - rbac.authorization.k8s.io
        - storage.k8s.io
        - source.toolkit.fluxcd.io
        - gitops.weave.works
        - kustomize.toolkit.fluxcd.io
        - helm.toolkit.fluxcd.io
        - autoscaling
        resources:
        - namespaces
        - pods
        - limitranges
        - deployments
        - replicationcontrollers
        - statefulsets
        - daemonsets
        - replicasets
        - jobs
        - cronjobs
        - services
        - clusterrolebindings
        - clusterroles
        - roles
        - rolebindings
        - persistentvolumes
        - persistentvolumeclaims
        - storageclasses
        - gitrepositories
        - helmrepositories
        - buckets
        - gitopsclusters
        - kustomizations
        - helmreleases
        - ocirepositories
        - horizontalpodautoscalers
        - helmcharts
    timeoutSeconds: 5
    failurePolicy: {{ .Values.failurePolicy }}
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    matchPolicy: Equivalent
    namespaceSelector:
      matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        {{- if .Values.excludeNamespaces }}
        values:
          {{- toYaml .Values.excludeNamespaces | nindent 8 }}
        {{- else }}
        values:
        - {{ .Release.Namespace }}
        {{- end }}
{{- end}}
  - name: policyconfigs.pac.weave.works
    admissionReviewVersions:
    - v1
    clientConfig:
      service:
        name: policy-agent
        namespace: {{ .Release.Namespace }}
        path: /validate-v2beta2-policyconfig
    failurePolicy: Fail
    rules:
    - apiGroups:
      - pac.weave.works
      apiVersions:
      - v2beta2
      operations:
      - CREATE
      - UPDATE
      resources:
      - policyconfigs
    sideEffects: None

---

{{- if and .Values.config.admission.enabled .Values.config.admission.mutate }}
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: policy-agent
  labels:
    app.kubernetes.io/name: policy-agent
  {{- if .Values.useCertManager }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/agent-certificate
  {{- end }}
webhooks:
  - name: mutation.agent.weaveworks
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: policy-agent
        path: /mutation
      caBundle: {{ .Values.caCertificate | b64enc }}
    rules:
      - operations: [ "CREATE" ]
        apiVersions: ["*"]
        apiGroups:
        - ""
        - extensions
        - apps
        - batch
        - metrics.k8s.io
        - rbac.authorization.k8s.io
        - storage.k8s.io
        - source.toolkit.fluxcd.io
        - gitops.weave.works
        - kustomize.toolkit.fluxcd.io
        - helm.toolkit.fluxcd.io
        - autoscaling
        resources:
        - namespaces
        - pods
        - limitranges
        - deployments
        - replicationcontrollers
        - statefulsets
        - daemonsets
        - replicasets
        - jobs
        - cronjobs
        - services
        - clusterrolebindings
        - clusterroles
        - roles
        - rolebindings
        - persistentvolumes
        - persistentvolumeclaims
        - storageclasses
        - gitrepositories
        - helmrepositories
        - buckets
        - gitopsclusters
        - kustomizations
        - helmreleases
        - ocirepositories
        - horizontalpodautoscalers
        - helmcharts
    timeoutSeconds: 5
    failurePolicy: {{ .Values.failurePolicy }}
    admissionReviewVersions: ["v1"]
    sideEffects: None
    matchPolicy: Equivalent
    namespaceSelector:
      matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        {{- if .Values.excludeNamespaces }}
        values:
          {{- toYaml .Values.excludeNamespaces | nindent 8 }}
        {{- else }}
        values:
        - {{ .Release.Namespace }}
        {{- end }}
{{- end }}
