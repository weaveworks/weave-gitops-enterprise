---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: policies.pac.weave.works
spec:
  group: pac.weave.works
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the policies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy It describes
              all that is needed to evaluate a resource against a rego code
            properties:
              category:
                description: Category specifies under which grouping this policy should
                  be included
                type: string
              code:
                description: Code contains the policy rego code
                type: string
              controls:
                description: Controls is a list of policy controls that this policy
                  falls under
                items:
                  type: string
                type: array
              description:
                description: Description is a summary of what that policy validates
                type: string
              enable:
                description: Enable specifies if this policy should be used for evaluation
                  or not
                type: string
              how_to_solve:
                description: HowToSolve is a description of the steps required to
                  solve the issues reported by the policy
                type: string
              id:
                description: ID is the policy unique identifier
                type: string
              name:
                description: Name is the policy name
                type: string
              parameters:
                description: Parameters are the inputs needed for the policy validation
                items:
                  description: PolicyParameters defines a needed input in a policy
                  properties:
                    name:
                      description: Name is a descriptive name of a policy parameter
                      type: string
                    required:
                      description: Required specifies if this is a necessary value
                        or not
                      type: boolean
                    type:
                      description: Type is the type of that parameter, integer, string,...
                      type: string
                    value:
                      description: Value is the value for that parameter
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - required
                  - type
                  type: object
                type: array
              severity:
                description: Severity is a measure of the impact of that policy, can
                  be low, medium or high
                enum:
                - low
                - medium
                - high
                type: string
              tags:
                description: Tags is a list of tags associated with that policy
                items:
                  type: string
                type: array
              targets:
                description: Targets describes the required metadata that needs to
                  be matched to evaluate a resource against the policy all values
                  specified need to exist in the resource to be considered for evaluation
                properties:
                  kinds:
                    description: Kinds is a list of Kubernetes kinds that are supported
                      by this policy
                    items:
                      type: string
                    type: array
                  labels:
                    description: Labels is a list of Kubernetes labels that are needed
                      to evaluate the policy against a resource this filter is statisfied
                      if only one label existed, using * for value make it so it will
                      match if the key exists regardless of its value
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  namespaces:
                    description: Namespaces is a list of Kubernetes namespaces that
                      a resource needs to be a part of to evaluate against this policy
                    items:
                      type: string
                    type: array
                required:
                - kinds
                type: object
            required:
            - category
            - code
            - description
            - how_to_solve
            - id
            - name
            - severity
            type: object
        type: object
    served: false
    storage: false
  - name: v2beta1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the policies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy It describes
              all that is needed to evaluate a resource against a rego code
            properties:
              category:
                description: Category specifies under which grouping this policy should
                  be included
                type: string
              code:
                description: Code contains the policy rego code
                type: string
              description:
                description: Description is a summary of what that policy validates
                type: string
              enabled:
                description: Enabled flag for third parties consumers that indicates
                  if this policy should be considered or not
                type: boolean
              how_to_solve:
                description: HowToSolve is a description of the steps required to
                  solve the issues reported by the policy
                type: string
              id:
                description: ID is the policy unique identifier
                type: string
              name:
                description: Name is the policy name
                type: string
              parameters:
                description: Parameters are the inputs needed for the policy validation
                items:
                  description: PolicyParameters defines a needed input in a policy
                  properties:
                    name:
                      description: Name is a descriptive name of a policy parameter
                      type: string
                    required:
                      description: Required specifies if this is a necessary value
                        or not
                      type: boolean
                    type:
                      description: Type is the type of that parameter, integer, string,...
                      type: string
                    value:
                      description: Value is the value for that parameter
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - required
                  - type
                  type: object
                type: array
              provider:
                default: kubernetes
                description: Provider policy provider, can be kubernetes, terraform
                enum:
                - kubernetes
                - terraform
                type: string
              severity:
                description: Severity is a measure of the impact of that policy, can
                  be low, medium or high
                enum:
                - low
                - medium
                - high
                type: string
              standards:
                description: Standards is a list of policy standards that this policy
                  falls under
                items:
                  properties:
                    controls:
                      description: Controls standard controls
                      items:
                        type: string
                      type: array
                    id:
                      description: ID idenitifer of the standarad
                      type: string
                  required:
                  - id
                  type: object
                type: array
              tags:
                description: Tags is a list of tags associated with that policy
                items:
                  type: string
                type: array
              targets:
                description: Targets describes the required metadata that needs to
                  be matched to evaluate a resource against the policy all values
                  specified need to exist in the resource to be considered for evaluation
                properties:
                  kinds:
                    description: Kinds is a list of Kubernetes kinds that are supported
                      by this policy
                    items:
                      type: string
                    type: array
                  labels:
                    description: Labels is a list of Kubernetes labels that are needed
                      to evaluate the policy against a resource this filter is statisfied
                      if only one label existed, using * for value make it so it will
                      match if the key exists regardless of its value
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  namespaces:
                    description: Namespaces is a list of Kubernetes namespaces that
                      a resource needs to be a part of to evaluate against this policy
                    items:
                      type: string
                    type: array
                required:
                - kinds
                type: object
            required:
            - category
            - code
            - description
            - how_to_solve
            - id
            - name
            - severity
            type: object
        type: object
    served: true
    storage: false
  - additionalPrinterColumns:
    - jsonPath: .spec.severity
      name: Severity
      type: string
    - jsonPath: .spec.category
      name: Category
      type: string
    - jsonPath: .spec.provider
      name: Provider
      type: string
    - jsonPath: .status.modes_str
      name: Modes
      type: string
    name: v2beta2
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the policies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy It describes
              all that is needed to evaluate a resource against a rego code
            properties:
              category:
                description: Category specifies under which grouping this policy should
                  be included
                type: string
              code:
                description: Code contains the policy rego code
                type: string
              description:
                description: Description is a summary of what that policy validates
                type: string
              enabled:
                description: Enabled flag for third parties consumers that indicates
                  if this policy should be considered or not
                type: boolean
              how_to_solve:
                description: HowToSolve is a description of the steps required to
                  solve the issues reported by the policy
                type: string
              id:
                description: ID is the policy unique identifier
                type: string
              mutate:
                default: false
                description: Mutate is a flag that indicates whether to enable mutation
                  of resources violating this policy or not
                type: boolean
              name:
                description: Name is the policy name
                type: string
              parameters:
                description: Parameters are the inputs needed for the policy validation
                items:
                  description: PolicyParameters defines a needed input in a policy
                  properties:
                    name:
                      description: Name is a descriptive name of a policy parameter
                      type: string
                    required:
                      description: Required specifies if this is a necessary value
                        or not
                      type: boolean
                    type:
                      description: Type is the type of that parameter, integer, string,...
                      type: string
                    value:
                      description: Value is the value for that parameter
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - name
                  - required
                  - type
                  type: object
                type: array
              provider:
                default: kubernetes
                description: Provider is policy provider, can be kubernetes, terraform
                enum:
                - kubernetes
                - terraform
                type: string
              severity:
                description: Severity is a measure of the impact of that policy, can
                  be low, medium or high
                enum:
                - low
                - medium
                - high
                type: string
              standards:
                description: Standards is a list of policy standards that this policy
                  falls under
                items:
                  properties:
                    controls:
                      description: Controls standard controls
                      items:
                        type: string
                      type: array
                    id:
                      description: ID idenitifer of the standarad
                      type: string
                  required:
                  - id
                  type: object
                type: array
              tags:
                description: Tags is a list of tags associated with that policy
                items:
                  type: string
                type: array
              targets:
                description: Targets describes the required metadata that needs to
                  be matched to evaluate a resource against the policy all values
                  specified need to exist in the resource to be considered for evaluation
                properties:
                  kinds:
                    description: Kinds is a list of Kubernetes kinds that are supported
                      by this policy
                    items:
                      type: string
                    type: array
                  labels:
                    description: Labels is a list of Kubernetes labels that are needed
                      to evaluate the policy against a resource this filter is statisfied
                      if only one label existed, using * for value make it so it will
                      match if the key exists regardless of its value
                    items:
                      additionalProperties:
                        type: string
                      type: object
                    type: array
                  namespaces:
                    description: Namespaces is a list of Kubernetes namespaces that
                      a resource needs to be a part of to evaluate against this policy
                    items:
                      type: string
                    type: array
                required:
                - kinds
                type: object
            required:
            - category
            - code
            - description
            - how_to_solve
            - id
            - name
            - severity
            type: object
          status:
            description: PolicyStatus Policy Status object PolicyStatus contains the
              list of modes the policy will be evaluated in. It will be updated every
              time a policy set is got created, updated or deleted.
            properties:
              modes:
                description: Modes is the list of modes the policy will be evaluated
                  in, must be one of audit,admission,tf-admission
                items:
                  type: string
                type: array
              modes_str:
                description: ModesString is the string format of the modes field to
                  be displayed
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
