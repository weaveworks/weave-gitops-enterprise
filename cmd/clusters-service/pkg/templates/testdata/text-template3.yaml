apiVersion: capi.weave.works/v1alpha2
kind: CAPITemplate
metadata:
  annotations:
  name: cluster-template-templating
  namespace: default
spec:
  description: A simple CAPD template
  params:
  - description: This is used for the cluster naming.
    name: CLUSTER_NAME
    required: true
  - description: Namespace to create the cluster in
    name: NAMESPACE
  - description: Kubernetes version to use for the cluster
    name: KUBERNETES_VERSION
    options:
    - 1.19.11
    - 1.21.1
    - 1.22.0
    - 1.23.3
  - description: Number of control planes
    name: CONTROL_PLANE_MACHINE_COUNT
    options:
    - "1"
    - "2"
    - "3"
  - description: Number of control planes
    name: WORKER_MACHINE_COUNT
  renderType: templating
  resourcetemplates:
  - content:
    - apiVersion: gitops.weave.works/v1alpha1
      kind: GitopsCluster
      metadata:
        labels:
          weave.works/capi: bootstrap
        name: "{{ .params.CLUSTER_NAME }}"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        capiClusterRef:
          name: "{{ .params.CLUSTER_NAME }}"
    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      metadata:
        labels:
          cni: calico
          weave.works/capi: bootstrap
        name: "{{ .params.CLUSTER_NAME }}"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        clusterNetwork:
          pods:
            cidrBlocks:
            - 192.168.0.0/16
          serviceDomain: cluster.local
          services:
            cidrBlocks:
            - 10.128.0.0/12
        controlPlaneRef:
          apiVersion: controlplane.cluster.x-k8s.io/v1beta1
          kind: KubeadmControlPlane
          name: "{{ .params.CLUSTER_NAME }}-control-plane"
          namespace: "{{ .params.NAMESPACE }}"
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
          kind: DockerCluster
          name: "{{ .params.CLUSTER_NAME }}"
          namespace: "{{ .params.NAMESPACE }}"
    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerCluster
      metadata:
        name: "{{ .params.CLUSTER_NAME }}"
        namespace: "{{ .params.NAMESPACE }}"
    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerMachineTemplate
      metadata:
        name: "{{ .params.CLUSTER_NAME }}-control-plane"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        template:
          spec:
            extraMounts:
            - containerPath: /var/run/docker.sock
              hostPath: /var/run/docker.sock
    - apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlane
      metadata:
        name: "{{ .params.CLUSTER_NAME }}-control-plane"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        kubeadmConfigSpec:
          clusterConfiguration:
            apiServer:
              certSANs:
              - localhost
              - 127.0.0.1
              - 0.0.0.0
            controllerManager:
              extraArgs:
                enable-hostpath-provisioner: "true"
          initConfiguration:
            nodeRegistration:
              criSocket: /var/run/containerd/containerd.sock
              kubeletExtraArgs:
                cgroup-driver: cgroupfs
                eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
          joinConfiguration:
            nodeRegistration:
              criSocket: /var/run/containerd/containerd.sock
              kubeletExtraArgs:
                cgroup-driver: cgroupfs
                eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
        machineTemplate:
          infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: DockerMachineTemplate
            name: "{{ .params.CLUSTER_NAME }}-control-plane"
            namespace: "{{ .params.NAMESPACE }}"
        replicas: "{{ .params.CONTROL_PLANE_MACHINE_COUNT }}"
        version: "{{ .params.KUBERNETES_VERSION }}"
    - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerMachineTemplate
      metadata:
        name: "{{ .params.CLUSTER_NAME }}-md-0"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        template:
          spec: {}
    - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
      kind: KubeadmConfigTemplate
      metadata:
        name: "{{ .params.CLUSTER_NAME }}-md-0"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        template:
          spec:
            joinConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  cgroup-driver: cgroupfs
                  eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: MachineDeployment
      metadata:
        name: "{{ .params.CLUSTER_NAME }}-md-0"
        namespace: "{{ .params.NAMESPACE }}"
      spec:
        clusterName: "{{ .params.CLUSTER_NAME }}"
        replicas: "{{ .params.WORKER_MACHINE_COUNT }}"
        selector:
          matchLabels: null
        template:
          spec:
            bootstrap:
              configRef:
                apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
                kind: KubeadmConfigTemplate
                name: "{{ .params.CLUSTER_NAME }}-md-0"
                namespace: "{{ .params.NAMESPACE }}"
            clusterName: "{{ .params.CLUSTER_NAME }}"
            infrastructureRef:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: DockerMachineTemplate
              name: "{{ .params.CLUSTER_NAME }}-md-0"
              namespace: "{{ .params.NAMESPACE }}"
            version: "{{ .params.KUBERNETES_VERSION }}"
