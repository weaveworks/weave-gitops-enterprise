apiVersion: capi.weave.works/v1alpha1
kind: CAPITemplate
metadata:
  name: capa-cluster-template-{{.Count}}
  namespace: default
  labels:
    weave.works/template-type: cluster
  annotations:
    templates.weave.works/inject-prune-annotation: "true"
    templates.weave.works/cost-estimation-enabled: "true"
    templates.weave.works/profiles-enabled: "false"
    templates.weave.works/kustomizations-enabled: "false"
    templates.weave.works/credentials-enabled: "true"

spec:
  description: This is the std. CAPA template {{.Count}}
  params:
    - name: CLUSTER_NAME
      description: This is used for the cluster naming.
      required: true
    - name: NAMESPACE
      description: Namespace to create the cluster in.
      required: true
    - name: AWS_REGION
      description: AWS Region to create cluster
      options: ["us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-3", "ap-northeast-2", "ap-southeast-1", "ap-southeast-2", "ap-northeast-1", "ca-central-1", "eu-central-1", "eu-west-1", "eu-west-2", "eu-south-1", "eu-west-3", "eu-north-1", "me-south-1", "sa-east-1"]
    - name: AWS_SSH_KEY_NAME
      description: AWS ssh key name
      options: ["weave-gitops-pesto"]
      default: "weave-gitops-pesto"
      required: false
    - name: KUBERNETES_VERSION
      description: The version of Kubernetes to use.
      options: ["v1.21.1", "v1.22.0", "v1.23.3"]
    - name: AWS_CONTROL_PLANE_MACHINE_TYPE
      description: Control plane machine instane type.
      options: ["t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge"]
      default: t3.large
    - name: CONTROL_PLANE_MACHINE_COUNT
      description: Number of control planes
      options: ["1", "2", "3", "4", "5"]
    - name: AWS_NODE_MACHINE_TYPE
      description: Node machine instane type.
      options: ["t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge"]
      default: t3.large
    - name: WORKER_MACHINE_COUNT
      description: Number of control planes
      options: ["1", "2", "3", "4", "5", "6", "7"]
    - name: COST_ESTIMATION_FILTERS
      description: "(Optional) DEBUG: Query string of extra filters to use when estimating costs."
      required: false
  resourcetemplates:
    - content:
      - apiVersion: gitops.weave.works/v1alpha1
        kind: GitopsCluster
        metadata:
          name: "${CLUSTER_NAME}"
          namespace: "${NAMESPACE}"
          labels:
            weave.works/flux: bootstrap
        spec:
          capiClusterRef:
            name: "${CLUSTER_NAME}"
      - apiVersion: cluster.x-k8s.io/v1beta1
        kind: Cluster
        metadata:
          name: "${CLUSTER_NAME}"
          namespace: "${NAMESPACE}"
          labels:
            cni: calico
          annotations:
            "templates.weave.works/estimation-filters": "${COST_ESTIMATION_FILTERS}"
        spec:
          clusterNetwork:
            pods:
              cidrBlocks:
              - 192.168.0.0/16
          controlPlaneRef:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: KubeadmControlPlane
            name: "${CLUSTER_NAME}-control-plane"
          infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: AWSCluster
            name: "${CLUSTER_NAME}"
      - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSCluster
        metadata:
          name: "${CLUSTER_NAME}"
          namespace: "${NAMESPACE}"
        spec:
          region: "${AWS_REGION}"
          sshKeyName: "${AWS_SSH_KEY_NAME}"
      - apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlane
        metadata:
          name: "${CLUSTER_NAME}-control-plane"
          namespace: "${NAMESPACE}"
        spec:
          kubeadmConfigSpec:
            clusterConfiguration:
              apiServer:
                extraArgs:
                  cloud-provider: aws
              controllerManager:
                extraArgs:
                  cloud-provider: aws
            initConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  cloud-provider: aws
                name: '{{`{{ ds.meta_data.local_hostname }}`}}'
            joinConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  cloud-provider: aws
                name: '{{`{{ ds.meta_data.local_hostname }}`}}'
          machineTemplate:
            infrastructureRef:
              apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
              kind: AWSMachineTemplate
              name: "${CLUSTER_NAME}-control-plane"
          replicas: ${CONTROL_PLANE_MACHINE_COUNT}
          version: "${KUBERNETES_VERSION}"
      - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
        metadata:
          name: "${CLUSTER_NAME}-control-plane"
          namespace: "${NAMESPACE}"
        spec:
          template:
            spec:
              iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
              instanceType: "${AWS_CONTROL_PLANE_MACHINE_TYPE}"
              sshKeyName: "${AWS_SSH_KEY_NAME}"
      - apiVersion: cluster.x-k8s.io/v1beta1
        kind: MachineDeployment
        metadata:
          name: "${CLUSTER_NAME}-md-0"
          namespace: "${NAMESPACE}"
        spec:
          clusterName: "${CLUSTER_NAME}"
          replicas: ${WORKER_MACHINE_COUNT}
          selector:
            matchLabels: null
          template:
            spec:
              bootstrap:
                configRef:
                  apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
                  kind: KubeadmConfigTemplate
                  name: "${CLUSTER_NAME}-md-0"
              clusterName: "${CLUSTER_NAME}"
              infrastructureRef:
                apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
                kind: AWSMachineTemplate
                name: "${CLUSTER_NAME}-md-0"
              version: "${KUBERNETES_VERSION}"
      - apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
        metadata:
          name: "${CLUSTER_NAME}-md-0"
          namespace: "${NAMESPACE}"
        spec:
          template:
            spec:
              iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
              instanceType: "${AWS_NODE_MACHINE_TYPE}"
              sshKeyName: "${AWS_SSH_KEY_NAME}"
      - apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
        kind: KubeadmConfigTemplate
        metadata:
          name: "${CLUSTER_NAME}-md-0"
          namespace: "${NAMESPACE}"
        spec:
          template:
            spec:
              joinConfiguration:
                nodeRegistration:
                  kubeletExtraArgs:
                    cloud-provider: aws
                  name: '{{`{{ ds.meta_data.local_hostname }}`}}'
