apiVersion: capi.weave.works/v1alpha2
kind: CAPITemplate
metadata:
  name: capa-cluster-template-eks-{{.Count}}
  namespace: default
  labels:
    weave.works/template-type: cluster
  annotations:
    templates.weave.works/cost-estimation-enabled: "true"
    templates.weave.works/profiles-enabled: "false"
    templates.weave.works/kustomizations-enabled: "false"
    templates.weave.works/credentials-enabled: "true"

spec:
  description: This is the std. CAPA template {{.Count}}
  params:
    - name: CLUSTER_NAME
      description: This is used for the cluster naming.
    - name: NAMESPACE
      description: Namespace to create the cluster in.
      default: "default"
    - name: AWS_REGION
      description: AWS Region to create cluster
      options:
        [
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "ca-central-1",
          "eu-central-1",
          "eu-west-1",
          "eu-west-2",
          "eu-south-1",
          "eu-west-3",
          "eu-north-1",
          "me-south-1",
          "sa-east-1",
        ]
      default: eu-central-1
    - name: AWS_SSH_KEY_NAME
      description: AWS ssh key name
      options: ["weave-gitops-pesto"]
      default: "weave-gitops-pesto"
    - name: KUBERNETES_VERSION
      description: The version of Kubernetes to use.
      options: ["v1.21.1", "v1.22.0", "v1.23.3"]
      default: v1.23.3
    - name: AWS_NODE_MACHINE_TYPE
      description: Node machine instane type.
      options:
        [
          "t3.nano",
          "t3.micro",
          "t3.small",
          "t3.medium",
          "t3.large",
          "t3.xlarge",
          "t3.2xlarge",
        ]
      default: t3.2xlarge
    - name: WORKER_MACHINE_COUNT
      description: Number of worker machines
      options: ["1", "2", "3", "4", "5", "6", "7"]
      default: "2"
  resourcetemplates:
    - content:
        - apiVersion: gitops.weave.works/v1alpha1
          kind: GitopsCluster
          metadata:
            name: "${CLUSTER_NAME}"
            namespace: "${NAMESPACE}"
            labels:
              weave.works/flux: bootstrap
          spec:
            capiClusterRef:
              name: "${CLUSTER_NAME}"
        - apiVersion: cluster.x-k8s.io/v1beta1
          kind: Cluster
          metadata:
            name: "${CLUSTER_NAME}"
          spec:
            clusterNetwork:
              pods:
                cidrBlocks: ["192.168.0.0/16"]
            infrastructureRef:
              kind: AWSManagedControlPlane
              apiVersion: controlplane.cluster.x-k8s.io/v1beta2
              name: "${CLUSTER_NAME}-control-plane"
            controlPlaneRef:
              kind: AWSManagedControlPlane
              apiVersion: controlplane.cluster.x-k8s.io/v1beta2
              name: "${CLUSTER_NAME}-control-plane"
        - kind: AWSManagedControlPlane
          apiVersion: controlplane.cluster.x-k8s.io/v1beta2
          metadata:
            name: "${CLUSTER_NAME}-control-plane"
          spec:
            region: "${AWS_REGION}"
            sshKeyName: "${AWS_SSH_KEY_NAME}"
            version: "${KUBERNETES_VERSION}"
        - apiVersion: cluster.x-k8s.io/v1beta1
          kind: MachineDeployment
          metadata:
            name: "${CLUSTER_NAME}-md-0"
          spec:
            clusterName: "${CLUSTER_NAME}"
            replicas: ${WORKER_MACHINE_COUNT}
            selector:
              matchLabels:
            template:
              spec:
                clusterName: "${CLUSTER_NAME}"
                version: "${KUBERNETES_VERSION}"
                bootstrap:
                  configRef:
                    name: "${CLUSTER_NAME}-md-0"
                    apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
                    kind: EKSConfigTemplate
                infrastructureRef:
                  name: "${CLUSTER_NAME}-md-0"
                  apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
                  kind: AWSMachineTemplate
        - apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
          kind: AWSMachineTemplate
          metadata:
            name: "${CLUSTER_NAME}-md-0"
          spec:
            template:
              spec:
                instanceType: "${AWS_NODE_MACHINE_TYPE}"
                iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
                sshKeyName: "${AWS_SSH_KEY_NAME}"
        - apiVersion: bootstrap.cluster.x-k8s.io/v1beta2
          kind: EKSConfigTemplate
          metadata:
            name: "${CLUSTER_NAME}-md-0"
          spec:
            template: {}
