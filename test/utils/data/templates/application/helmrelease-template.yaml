apiVersion: templates.weave.works/v1alpha2
kind: GitOpsTemplate
metadata:
  name: helmrelease-template
  namespace: default
  labels:
    weave.works/template-type: application
  annotations:
    templates.weave.works/cost-estimation-enabled: "false"
    templates.weave.works/profiles-enabled: "false"
    templates.weave.works/credentials-enabled: "false"
    templates.weave.works/kustomizations-enabled: "false"
    templates.weave.works/delimiters: "${{,}}"
spec:
  renderType: templating
  description: A generic helmrelease template for deploying from a helm repository using a Flux Kustomization
  params:
    - name: RESOURCE_NAME
      required: true
      description: Name to give the kustomization
    - name: NAMESPACE
      description: Namespace to create the source in
      default: default
    - name: SOURCE_NAME
      required: true
      description: Source that contains the Kubernetes manifests
    - name: SOURCE_NAMESPACE
      required: true
      default: default
      description: Namespace of source
    - name: CHART_NAME
      required: true
      description: Helm chart name
    - name: CHART_VERSION
      required: true
      description: Helm chart version, accepts a semver range
    - name: VALUES
      required: true
      default: "null"
      description: 'A json sting containing values.yaml "{"name": foo}"'
    - name: TARGET_NAMESPACE
      required: true
      default: default
      description: Namespace of all Kustomization objects
    - name: INTERVAL
      description: How often to check for updates
      default: 30s
  resourcetemplates:
    - content:
        - apiVersion: helm.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: ${{ .params.RESOURCE_NAME }}
            namespace: ${{ .params.NAMESPACE }}
          spec:
            interval: 30s
            chart:
              spec:
                chart: ${{ .params.CHART_NAME }}
                sourceRef:
                  apiVersion: source.toolkit.fluxcd.io/v1beta2
                  kind: HelmRepository
                  name: ${{ .params.SOURCE_NAME }}
                  namespace: ${{ .params.SOURCE_NAMESPACE }}
                version: ${{ .params.CHART_VERSION }}
            targetNamespace: ${{ .params.TARGET_NAMESPACE }}
            values: ${{ .params.VALUES | fromJson }}
