on:
  push:
    branches-ignore:
      - "main"
    tags-ignore:
      - "*"
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

name: run tests
jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GO_CACHE_NAME: cache-go-modules
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: echo ref
        run: |
          echo "${{ github.ref }}"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: wge-build-bot
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-
      - name: Lint
        run: |
          make lint

  unit-tests:
    runs-on: ubuntu-latest
    env:
      GO_CACHE_NAME: cache-go-modules
      WGE_COVERALLS_TOKEN: ${{ secrets.WGE_COVERALLS_TOKEN }}
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: wge-build-bot
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-
      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls

      - name: Run unit tests
        run: |
          go version
          make unit-tests-with-coverage

  build:
    uses: ./.github/workflows/build.yaml
    with:
      helmrepo: "charts-v3"
    secrets:
      BUILD_BOT_PERSONAL_ACCESS_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      WGE_DOCKER_IO_USER: ${{ secrets.WGE_DOCKER_IO_USER }}
      WGE_DOCKER_IO_PASSWORD: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      WGE_NPM_GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
      WGE_S3_AWS_ACCESS_KEY_ID: ${{ secrets.WGE_S3_AWS_ACCESS_KEY_ID }}
      WGE_S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.WGE_S3_AWS_SECRET_ACCESS_KEY }}

  integration-tests:
    runs-on: ubuntu-latest
    env:
      GO_CACHE_NAME: cache-go-modules
      YARN_CACHE_NAME: cache-yarn
      GITHUB_TOKEN: ${{ secrets.WGE_GITHUB_TOKEN }}
      GITHUB_ORG: wge-org-test
      GITHUB_USER: ${{ secrets.WGE_GITHUB_USER }}
      GITLAB_TOKEN: ${{ secrets.WGE_ON_PREM_GITLAB_TOKEN }}
      GIT_PROVIDER_HOSTNAME: gitlab.git.dev.weave.works
    steps:
      - id: cache-paths
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: wge-build-bot
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache-paths.outputs.go-build }}
            ${{ steps.cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-paths.outputs.dir }}
          key: ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-
      - name: Set up ssh
        uses: ./.github/actions/setup-ssh
        with:
          ssh-private-key: ${{ secrets.WGE_GITHUB_PRIVATE_KEY }}
      - name: Run integration tests
        run: |
          go version
          make dependencies
          cd cmd/clusters-service
          go test -v ./... -tags=integration

  ui-unit-tests:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      YARN_CACHE_NAME: cache-yarn
    steps:
      - id: cache-paths
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-paths.outputs.dir }}
          key: ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-
      - name: Install modules
        run: cd ui-cra && yarn --pure-lockfile
      - name: Run Front-end Unit Tests
        run: cd ui-cra && ./node_modules/.bin/react-scripts test
