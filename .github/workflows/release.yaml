on:
  push:
    tags: [v*.*.*]

name: release
jobs:
  build-releaser:
    runs-on: ubuntu-latest    
    env:
      GO_CACHE_NAME: cache-go-modules
      YARN_CACHE_NAME: cache-yarn
      GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
    steps:
    - id: cache-paths
      run: |
        echo "::set-output name=dir::$(yarn cache dir)"
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Configure git for private modules
      env:
        GITHUB_BUILD_USERNAME: wge-build-bot
        GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set environment variable
      run: |
        git fetch --tags --force
        TAG=$(git describe --always --match "v*")
        echo "TAG=$TAG" >> $GITHUB_ENV
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.cache-paths.outputs.go-build }}
          ${{ steps.cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-build-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-build-${{ env.GO_CACHE_NAME }}-
    - name: Yarn Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-paths.outputs.dir }}
        key: ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-
    - name: Build all the services
      env:
        GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      run: |
        make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN}    
    - name: Install Helm v3
      uses: azure/setup-helm@v1
      with:
        version: v3.5.4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.WGE_S3_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.WGE_S3_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Publish helm chart to s3
      run: |      
          CHART_VALUES_PATH=./charts/mccp/values.yaml
          # Update the MCCP chart values.yaml file with the current image tag
          make update-mccp-chart-values CHART_VALUES_PATH=$CHART_VALUES_PATH
          # Publish the MCCP Helm v3 chart
          ./bin/publish-chart-to-s3.sh $TAG "releases/charts-v3" ./charts/mccp    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.WGE_DOCKER_IO_USER }}
        password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
    - name: Push images to docker registry
      run: make push
    - name: Build Changelog
      id: github_release
      uses: mikepenz/release-changelog-builder-action@v1
      with:
        configuration: "${{ github.workspace }}/.github/workflows/changelog_configuration.json"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: true
        fail_on_unmatched_files: true
        body: ${{steps.github_release.outputs.changelog}}
        

