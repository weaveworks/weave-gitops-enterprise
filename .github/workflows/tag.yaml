on:
  pull_request:
  workflow_dispatch:

name: tag test
jobs: 
  build:
    runs-on: ubuntu-latest
    env:
      GO_CACHE_NAME: cache-go-modules
      YARN_CACHE_NAME: cache-yarn
      GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
    steps:
    - id: cache-paths
      run: |
        echo "::set-output name=dir::$(yarn cache dir)"
        echo "::set-output name=go-build::$(go env GOCACHE)"
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Configure git for private modules
      env:
        GITHUB_BUILD_USERNAME: wge-build-bot
        GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Go Build Cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.cache-paths.outputs.go-build }}
          ${{ steps.cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-build-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-build-${{ env.GO_CACHE_NAME }}-
    - name: Yarn Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-paths.outputs.dir }}
        key: ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-
    - name: Build all the services
      run: |
        git describe --always --match "v*"
        git describe --always --tags --match "v*"
        tools/image-tag
    - name: Force tag fetch
      run: |
        git fetch --tags --force
        git describe --always --match "v*"
        git describe --always --tags --match "v*"
        tools/image-tag

    
    
  
        