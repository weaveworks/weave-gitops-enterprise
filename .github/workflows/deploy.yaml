on:
  push:
    branches:
      - main
  workflow_dispatch:

name: deploy
jobs:
  build:
    uses: ./.github/workflows/build.yaml
    with:
      helmrepo: "charts-v3"
    secrets:
      BUILD_BOT_PERSONAL_ACCESS_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
      WGE_DOCKER_IO_USER: ${{ secrets.WGE_DOCKER_IO_USER }}
      WGE_DOCKER_IO_PASSWORD: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      WGE_NPM_GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
      WGE_S3_AWS_ACCESS_KEY_ID: ${{ secrets.WGE_S3_AWS_ACCESS_KEY_ID }}
      WGE_S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.WGE_S3_AWS_SECRET_ACCESS_KEY }}
      WGE_HELM_REPO_USERNAME: ${{ secrets.WGE_HELM_REPO_USERNAME }}
      WGE_HELM_REPO_PASSWORD: ${{ secrets.WGE_HELM_REPO_PASSWORD }}

  coverage:
    runs-on: ubuntu-latest
    env:
      WGE_COVERALLS_TOKEN: ${{ secrets.WGE_COVERALLS_TOKEN }}
      ARTEFACTS_BASE_DIR: /tmp/workspace/test
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure git for private modules
        env:
          GITHUB_BUILD_USERNAME: wge-build-bot
          GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Install dependencies
        run: |
          go mod download
          go install github.com/wadey/gocovmerge@latest
          go install github.com/jstemmer/go-junit-report@latest
          npm install -g junit-report-merger
      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get github.com/mattn/goveralls

      - name: Run unit tests
        run: |
          go version
          mkdir -p ${{ env.ARTEFACTS_BASE_DIR }}

          WKP_DEBUG=true go test -cover -coverprofile=.coverprofile ./cmd/... ./pkg/... | go-junit-report > ${{ env.ARTEFACTS_BASE_DIR }}/test-results.xml
          cd ${{ github.workspace }}/common && go test -cover -coverprofile=.coverprofile ./... | go-junit-report > ${{ env.ARTEFACTS_BASE_DIR }}/common-results.xml
          cd ${{ github.workspace }}/cmd/clusters-service && go test -cover -coverprofile=.coverprofile ./... | go-junit-report > ${{ env.ARTEFACTS_BASE_DIR }}/clusters-service-results.xml

          cd ${{ github.workspace }}
          # Merge all coverage results
          gocovmerge .coverprofile common/.coverprofile  cmd/clusters-service/.coverprofile > ${{ env.ARTEFACTS_BASE_DIR }}/merged-profiles    
          # Merge all junit test results
          jrm ${{ env.ARTEFACTS_BASE_DIR }}/combined-test-results.xml '${{ env.ARTEFACTS_BASE_DIR }}/*.xml'
      - name: Store unit test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: unit-tests-artifacts
          path: |
            ${{ env.ARTEFACTS_BASE_DIR }}
          retention-days: 7

  gitops-binary:
    uses: ./.github/workflows/gitops-binary.yaml
    with:
      runs-on: ubuntu-latest
      ref: main

  acceptance-tests-gitlab-on-prem:
    needs: [build, coverage, gitops-binary]
    uses: ./.github/workflows/acceptance-test.yaml
    with:
      runs-on: ubuntu-latest
      os-name: linux
      timeout-minutes: 90
      label-filter: "-ginkgo.label-filter='!(application, leaf-policy)'"
      kubectl-version: "v1.23.3"
      login_user_type: "cluster-user"
      git-provider: gitlab
      git-provider_hostname: gitlab.git.dev.weave.works
      cluster_resource_set: true
      management-cluster-kind: kind
      capi_provider: capd
      gitops-bin-path: /usr/local/bin/gitops
      artifacts-base-dir: "/tmp/acceptance-test-gitlab-on-prem"
    secrets:
      WGE_CLUSTER_ADMIN_PASSWORD: "${{ secrets.WGE_CLUSTER_ADMIN_PASSWORD }}"
      WGE_CLUSTER_ADMIN_PASSWORD_HASH: "${{ secrets.WGE_CLUSTER_ADMIN_PASSWORD_HASH }}"
      WGE_DEX_CLIENT_SECRET: ${{ secrets.WGE_DEX_CLIENT_SECRET }}
      WGE_GITHUB_TOKEN: ${{ secrets.WGE_GITHUB_TOKEN }}
      WGE_GIT_PROVIDER_PRIVATE_KEY: ${{ secrets.WGE_ON_PREM_GITLAB_PRIVATE_KEY }}
      WGE_GITLAB_TOKEN: ${{ secrets.WGE_ON_PREM_GITLAB_TOKEN }}
      WGE_GITLAB_ORG: ${{ secrets.WGE_ON_PREM_GITLAB_ORG }}
      WGE_GITLAB_USER: ${{ secrets.WGE_ON_PREM_GITLAB_USER }}
      WGE_GITLAB_PASSWORD: ${{ secrets.WGE_ON_PREM_GITLAB_PASSWORD }}
      WGE_GITLAB_CLIENT_ID: ${{ secrets.WGE_ON_PREM_GITLAB_CLIENT_ID }}
      WGE_GITLAB_CLIENT_SECRET: ${{ secrets.WGE_ON_PREM_GITLAB_CLIENT_SECRET }}
