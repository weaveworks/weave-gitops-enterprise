name: "Build and push docker images and charts"

on:
  workflow_call:
    inputs:
      helmrepo:
        description: "Which helm repo to push to"
        required: true
        type: string
    secrets:
      BUILD_BOT_PERSONAL_ACCESS_TOKEN: { required: true }
      WGE_DOCKER_IO_USER: { required: true }
      WGE_DOCKER_IO_PASSWORD: { required: true }
      WGE_NPM_GITHUB_TOKEN: { required: true }
      WGE_S3_AWS_ACCESS_KEY_ID: { required: true }
      WGE_S3_AWS_SECRET_ACCESS_KEY: { required: true }

env:
  GITHUB_BUILD_USERNAME: wge-build-bot
  GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
  GO_CACHE_NAME: cache-go-modules
  YARN_CACHE_NAME: cache-yarn
  HELM_REPO: ${{ inputs.helmrepo }}

jobs:
  cluster-service:
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: set those vars
        id: lookup-vars
        run: |
          echo "::set-output name=version::$(git describe --always --match "v*" | sed 's/^[^0-9]*//')"
          echo "::set-output name=revision::$(git rev-parse HEAD)"
          echo "::set-output name=NPM_GITHUB_TOKEN::${{ secrets.WGE_NPM_GITHUB_TOKEN }}"
          echo "::set-output name=GITHUB_BUILD_TOKEN::${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}"
          echo "::set-output name=now::$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          echo "::set-output name=image_tag::$(./tools/image-tag)"
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-ghcache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ghcache-
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/clusters-service/Dockerfile
          push: true
          build-args: |
            "version=${{ steps.lookup-vars.outputs.version }}"
            "image_tag=${{ steps.lookup-vars.outputs.image_tag }}"
            "revision=${{ steps.lookup-vars.outputs.revision }}"
            "GITHUB_BUILD_TOKEN=${{ steps.lookup-vars.outputs.GITHUB_BUILD_TOKEN }}"
            "NPM_GITHUB_TOKEN=${{ steps.lookup-vars.outputs.NPM_GITHUB_TOKEN }}"
            "now=${{ steps.lookup-vars.outputs.now }}"
          tags: weaveworks/weave-gitops-enterprise-clusters-service:${{ steps.lookup-vars.outputs.image_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  ui-server:
    runs-on: ubuntu-latest
    steps:
    - id: cache-paths
      run: |
        echo "::set-output name=dir::$(yarn cache dir)"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Grab all tags from git
      run: |
        git fetch --tags -f
    - name: Yarn Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.cache-paths.outputs.dir }}
        key: ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.YARN_CACHE_NAME }}-
    - name: build
      env:
        GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
      run: |
        make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} ui-cra/.uptodate
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.WGE_DOCKER_IO_USER }}
        password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
    - name: Push images to docker registry
      run: |
        docker push docker.io/weaveworks/weave-gitops-enterprise-ui-server:$(./tools/image-tag)
