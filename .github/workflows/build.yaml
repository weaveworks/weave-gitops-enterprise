name: "Build and push docker images and charts"

on:
  workflow_call:
    inputs:
      helmrepo:
        description: "Which helm repo to push to"
        required: true
        type: string
    secrets:
      BUILD_BOT_PERSONAL_ACCESS_TOKEN: { required: true }
      WGE_DOCKER_IO_USER: { required: true }
      WGE_DOCKER_IO_PASSWORD: { required: true }
      WGE_NPM_GITHUB_TOKEN: { required: true }
      WGE_S3_AWS_ACCESS_KEY_ID: { required: true }
      WGE_S3_AWS_SECRET_ACCESS_KEY: { required: true }

env:
  GITHUB_BUILD_USERNAME: wge-build-bot
  GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
  GO_CACHE_NAME: cache-go-modules
  NODE_MODULES_CACHE_NAME: cache-node-modules
  NODE_VERSION: "14"
  HELM_REPO: ${{ inputs.helmrepo }}

jobs:
  helm-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: Install Helm v3
        uses: azure/setup-helm@v1
        with:
          version: v3.5.4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.WGE_S3_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.WGE_S3_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Publish helm chart to s3
        run: |
          TAG=$(git describe --always --match "v*")

          CHART_VALUES_PATH=./charts/mccp/values.yaml
          # Update the MCCP chart values.yaml file with the current image tag
          make update-mccp-chart-values CHART_VALUES_PATH=$CHART_VALUES_PATH

          # Publish the MCCP Helm v3 chart
          ./bin/publish-chart-to-s3.sh $TAG $HELM_REPO ./charts/mccp

  cluster-service:
    runs-on: ubuntu-latest
    steps:
      - id: cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure git for private modules
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: Get a gitops-binary
        uses: ./.github/actions/gitops-binary
        with:
          ref: insecure-requests-from-the-cli
          runs-on: ${{ inputs.runs-on }}
          os-name: ${{ inputs.os-name }}
          path: /tmp/gitops
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache-paths.outputs.go-build }}
            ${{ steps.cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-
      - name: build
        run: |
          make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} cmd/clusters-service/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push image
        run: docker push docker.io/weaveworks/weave-gitops-enterprise-clusters-service:$(./tools/image-tag)

  event-writer:
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: build
        run: |
          make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} cmd/event-writer/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push images to docker registry
        run: |
          docker push docker.io/weaveworks/weave-gitops-enterprise-event-writer:$(./tools/image-tag)

  ui-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"
          cache-dependency-path: |
            ui-cra/yarn.lock
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/ui-cra/node_modules
          # node_modules is not compat w/ multiple versions of node, invalidate if it changes
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ env.NODE_MODULES_CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ env.NODE_MODULES_CACHE_NAME }}-
      - name: build
        env:
          GITHUB_TOKEN: ${{ secrets.WGE_NPM_GITHUB_TOKEN }}
        run: |
          make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} ui-cra/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push images to docker registry
        run: |
          docker push docker.io/weaveworks/weave-gitops-enterprise-ui-server:$(./tools/image-tag)

  gitops-broker-and-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Stub
        run: |
          echo "Stub until we update corp to not require this task"

  gitops-agent:
    runs-on: ubuntu-latest
    steps:
      - id: cache-paths
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Configure git for private modules
        run: git config --global url."https://${GITHUB_BUILD_USERNAME}:${GITHUB_BUILD_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache-paths.outputs.go-build }}
            ${{ steps.cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ github.job }}-${{ env.GO_CACHE_NAME }}-
      - name: Build the agent
        run: |
          make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} cmd/wkp-agent/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push images to docker registry
        run: docker push docker.io/weaveworks/wkp-agent:$(./tools/image-tag)
