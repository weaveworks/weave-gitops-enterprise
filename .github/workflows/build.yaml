name: "Build and push docker images and charts"

on:
  workflow_call:
    inputs:
      helmrepo:
        description: "Which helm repo to push to"
        required: true
        type: string
    secrets:
      BUILD_BOT_PERSONAL_ACCESS_TOKEN: { required: true }
      WGE_DOCKER_IO_USER: { required: true }
      WGE_DOCKER_IO_PASSWORD: { required: true }
      WGE_NPM_GITHUB_TOKEN: { required: true }
      WGE_S3_AWS_ACCESS_KEY_ID: { required: true }
      WGE_S3_AWS_SECRET_ACCESS_KEY: { required: true }
      WGE_HELM_REPO_USERNAME: { required: false }
      WGE_HELM_REPO_PASSWORD: { required: false }
      WEAVE_GITOPS_CLUSTERS_GITHUB_WORKLOAD_IDENTITY_PROVIDER: { required: false }
      WEAVE_GITOPS_CLUSTERS_GITHUB_SERVICE_ACCOUNT: { required: false }

env:
  GITHUB_BUILD_USERNAME: wge-build-bot
  GITHUB_BUILD_TOKEN: ${{ secrets.BUILD_BOT_PERSONAL_ACCESS_TOKEN }}
  GO_CACHE_NAME: cache-go-modules
  NODE_MODULES_CACHE_NAME: cache-node-modules
  NODE_VERSION: "14"
  HELM_REPO: ${{ inputs.helmrepo }}
  REACT_APP_DISABLE_PROGRESSIVE_DELIVERY: "false"
  HAS_GCP_CREDS: ${{ secrets.WEAVE_GITOPS_CLUSTERS_GITHUB_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.WEAVE_GITOPS_CLUSTERS_GITHUB_SERVICE_ACCOUNT != '' }}

jobs:
  helm-chart:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: Generate release tags
        id: release_tags
        run: |
          TAG=$(git describe --always --match "v*" --abbrev=7)
          # Zero fill out the number of commits since the last tag. This allows helm to do a proper sorting of semver rc tags which are sorted alphanumerically.
          ZERO_FILLED_TAG=$(LAST_TAG=$(git describe --abbrev=0); N=$(git rev-list "$LAST_TAG".. --count); REF=$(git rev-parse --short=8 HEAD); printf "$LAST_TAG-%05d-g$REF" $N)
          SEMVER_TAG=$(awk -F'v|-g' '{print $2}' <<< $ZERO_FILLED_TAG)
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=zero_filled_tag::$ZERO_FILLED_TAG"
          echo "::set-output name=semver_tag::$SEMVER_TAG"
      - name: Install Helm v3
        uses: azure/setup-helm@v1
        with:
          version: v3.9.0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.WGE_S3_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.WGE_S3_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Publish helm chart to s3
        env:
          TAG: ${{ steps.release_tags.outputs.tag }}
        run: |
          CHART_VALUES_PATH=./charts/mccp/values.yaml
          # Update the MCCP chart values.yaml file with the current image tag
          make update-mccp-chart-values CHART_VALUES_PATH=$CHART_VALUES_PATH

          # Publish the MCCP Helm v3 chart
          ./bin/publish-chart-to-s3.sh $TAG $HELM_REPO ./charts/mccp
      - name: Publish Helm chart for main only
        if: github.ref_name == 'main'
        env:
          HELM_REPO_USERNAME: ${{ secrets.WGE_HELM_REPO_USERNAME }}
          HELM_REPO_PASSWORD: ${{ secrets.WGE_HELM_REPO_PASSWORD }}
          TAG: ${{ steps.release_tags.outputs.tag }}
          ZERO_FILLED_TAG: ${{ steps.release_tags.outputs.zero_filled_tag }}
          SEMVER_TAG: ${{ steps.release_tags.outputs.semver_tag }}
        run: |
          echo "Current tag $TAG"
          echo "Current zerofill'd tag $ZERO_FILLED_TAG"
          echo "Current semver tag $SEMVER_TAG"

          if [ -z $HELM_REPO_USERNAME ] && [ -z "$HELM_REPO_PASSWORD" ];
          then
            echo "Helm repo credentials were not found, skipping pushing main version"
          else
            # Install Helm cm-push plugin
            helm plugin install https://github.com/chartmuseum/helm-push
            helm repo add weave-gitops-enterprise-main https://charts.wge.dev.weave.works --username $HELM_REPO_USERNAME --password $HELM_REPO_PASSWORD
            # Use the same image tag from the previous step but set the semver version
            helm cm-push ./charts/mccp weave-gitops-enterprise-main --version=$SEMVER_TAG --force
          fi
      - name: Authenticate with Google Artifact Repository
        id: google_auth
        if: github.ref_name == 'main' && env.HAS_GCP_CREDS == 'true'
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.WEAVE_GITOPS_CLUSTERS_GITHUB_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.WEAVE_GITOPS_CLUSTERS_GITHUB_SERVICE_ACCOUNT }}
          token_format: access_token
          access_token_lifetime: 300s
      - name: Publish Helm chart to Google Artifact Repository
        if: github.ref_name == 'main' && env.HAS_GCP_CREDS == 'true'
        env:
          TAG: ${{ steps.release_tags.outputs.tag }}
          ZERO_FILLED_TAG: ${{ steps.release_tags.outputs.zero_filled_tag }}
          SEMVER_TAG: ${{ steps.release_tags.outputs.semver_tag }}
        run: |
          echo "Current tag $TAG"
          echo "Current zerofill'd tag $ZERO_FILLED_TAG"
          echo "Current semver tag $SEMVER_TAG"

          echo ${{ steps.google_auth.outputs.access_token }} | helm registry login europe-west1-docker.pkg.dev --username oauth2accesstoken --password-stdin
          helm package ./charts/mccp --version $SEMVER_TAG
          helm push ./mccp-$SEMVER_TAG.tgz oci://europe-west1-docker.pkg.dev/weave-gitops-clusters/weave-gitops-enterprise/charts

  cluster-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: build
        run: |
          make DOCKER_BUILDKIT=1 GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} cmd/clusters-service/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push image
        run: docker push docker.io/weaveworks/weave-gitops-enterprise-clusters-service:$(./tools/image-tag)

  ui-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Grab all tags from git
        run: |
          git fetch --tags -f
      - name: build
        run: |
          make GITHUB_BUILD_TOKEN=${GITHUB_BUILD_TOKEN} ui-cra/.uptodate
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.WGE_DOCKER_IO_USER }}
          password: ${{ secrets.WGE_DOCKER_IO_PASSWORD }}
      - name: Push images to docker registry
        run: |
          docker push docker.io/weaveworks/weave-gitops-enterprise-ui-server:$(./tools/image-tag)
