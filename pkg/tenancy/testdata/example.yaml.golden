apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: foo-tenant
  name: foo-ns
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: foo-tenant
  name: foo-tenant
  namespace: foo-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: foo-tenant
  name: foo-tenant
  namespace: foo-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: gotk:foo-ns:reconciler
- kind: ServiceAccount
  name: foo-tenant
  namespace: foo-ns
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: bar-ns
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: bar-tenant
  namespace: bar-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: bar-tenant
  namespace: bar-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: gotk:bar-ns:reconciler
- kind: ServiceAccount
  name: bar-tenant
  namespace: bar-ns
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: foobar-ns
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: bar-tenant
  namespace: foobar-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: bar-tenant
  namespace: foobar-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: gotk:foobar-ns:reconciler
- kind: ServiceAccount
  name: bar-tenant
  namespace: foobar-ns
---
apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: weave.policies.tenancy.bar-tenant-allowed-repositories
spec:
  category: weave.categories.tenancy
  code: |
    package weave.tenancy.allowed_repositories

    controller_input := input.review.object
    namespace := controller_input.metadata.namespace
    violation[result] {
        controller_input.kind == "GitRepository"
        urls := input.parameters.git_urls
        url := controller_input.spec.url
        not contains_array(url, urls)
        result = {
        "issue detected": true,
        "msg": sprintf("Git repository url %v is not allowed for namespace %v", [url, namespace]),
        }
    }
    violation[result] {
        controller_input.kind == "Bucket"
        urls := input.parameters.bucket_endpoints
        url := controller_input.spec.endpoint
        not contains_array(url, urls)
        result = {
        "issue detected": true,
        "msg": sprintf("Bucket endpoint %v is not allowed for namespace %v", [url, namespace]),
        }
    }
    violation[result] {
        controller_input.kind == "HelmRepository"
        urls := input.parameters.helm_urls
        url := controller_input.spec.url
        not contains_array(url, urls)
        result = {
        "issue detected": true,
        "msg": sprintf("Helm repository url %v is not allowed for namespace %v", [url, namespace]),
        }
    }
    contains_array(item, items) {
        items[_] = item
    }
  description: Controls the allowed repositories to be used as sources
  how_to_solve: ""
  id: weave.policies.tenancy.bar-tenant-allowed-repositories
  name: bar-tenant allowed repositories
  parameters:
  - name: git_urls
    required: false
    type: array
    value:
    - https://github.com/testorg/testrepo
    - https://github.com/testorg/testinfo
  - name: bucket_endpoints
    required: false
    type: array
    value:
    - minio.example.com
  - name: helm_urls
    required: false
    type: array
    value:
    - https://testorg.github.io/testrepo
  severity: high
  standards: []
  tags:
  - tenancy
  targets:
    kinds:
    - GitRepository
    - Bucket
    - HelmRepository
    labels: []
    namespaces:
    - bar-ns
    - foobar-ns
---
apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  creationTimestamp: null
  labels:
    toolkit.fluxcd.io/tenant: bar-tenant
  name: weave.policies.tenancy.bar-tenant-allowed-clusters
spec:
  category: weave.categories.tenancy
  code: |
    package weave.tenancy.allowed_clusters

    controller_input := input.review.object
    namespace := controller_input.metadata.namespace
    secrets := input.parameters.cluster_secrets
    violation[result] {
        controller_input.kind == "GitopsCluster"
        secret := controller_input.spec.secretRef.name
        not contains_array(secret, secrets)
        result = {
        "issue detected": true,
        "msg": sprintf("cluster secretRef %v is not allowed for namespace %v", [secret, namespace]),
        }
    }
    violation[result] {
        controller_input.kind == "Kustomization"
        secret := controller_input.spec.kubeConfig.secretRef.name
        not contains_array(secret, secrets)
        result = {
        "issue detected": true,
        "msg": sprintf("kustomization kubeconfig secretRef %v is not allowed for namespace %v", [secret, namespace]),
        }
    }
    contains_array(item, items) {
        items[_] = item
    }
  description: Controls the allowed clusters to be added
  how_to_solve: ""
  id: weave.policies.tenancy.bar-tenant-allowed-clusters
  name: bar-tenant allowed clusters
  parameters:
  - name: cluster_secrets
    required: false
    type: array
    value:
    - cluster-1-kubeconfig
    - cluster-2-kubeconfig
  severity: high
  standards: []
  tags:
  - tenancy
  targets:
    kinds:
    - GitopsCluster
    - Kustomization
    labels: []
    namespaces:
    - bar-ns
    - foobar-ns
---
